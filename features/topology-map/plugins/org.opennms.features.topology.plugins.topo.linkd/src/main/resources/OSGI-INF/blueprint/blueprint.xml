<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 
					https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
					http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0 
					http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd
					http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0 
					http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.5.xsd">

    <reference id="onmsTopologyDao" interface="org.opennms.netmgt.topologies.service.api.OnmsTopologyDao" availability="mandatory" />

    <reference id="alarmDao" interface="org.opennms.netmgt.dao.api.AlarmDao" availability="mandatory" />

    <!-- Metrics -->
    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry" />

    <bean id="metricRegistryJmxReporterBuilder" class="com.codahale.metrics.JmxReporter" factory-method="forRegistry">
        <argument ref="metricRegistry"/>
    </bean>

    <bean id="metricRegistryDomainedJmxReporterBuilder" factory-ref="metricRegistryJmxReporterBuilder" factory-method="inDomain">
        <argument value="org.opennms.features.topology.plugins.topo.linkd" />
    </bean>

    <bean id="metricRegistryJmxReporter"
        factory-ref="metricRegistryDomainedJmxReporterBuilder"
        factory-method="build"
        init-method="start"
        destroy-method="stop" />

    <!-- EnhancedLinkd -->
    <bean id="linkdTopologyProviderInfo" class="org.opennms.features.topology.api.topo.DefaultTopologyProviderInfo">
        <property name="name" value="Enhanced Linkd Topology Provider"/>
        <property name="description" value="This Topology Provider displays the topology information discovered by the Enhanced Linkd daemon. It uses the SNMP information of several protocols like OSPF, ISIS, LLDP and CDP to generate an overall topology."/>
        <property name="supportsCategorySearch" value="true"/>
    </bean>

    <bean id="linkdTopologyProvider" scope="singleton" class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdTopologyProvider">
        <argument index="0" value="enlinkd" />
        <argument index="1" ref="metricRegistry" />
        <argument index="2"> 
        	<list>
        <value>LLDP</value>
        <value>OSPF</value>
        <value>ISIS</value>
        <value>BRIDGE</value>
        <value>CDP</value>
        <value>USERDEFINED</value>
        	</list>
        	</argument>
        <property name="onmsTopologyDao" ref="onmsTopologyDao"/>
        <property name="topologyProviderInfo" ref="linkdTopologyProviderInfo"/>
    </bean>

    <bean id="linkdTopologyHopProvider" class="org.opennms.features.topology.api.support.VertexHopGraphProvider">
        <argument ref="linkdTopologyProvider"/>
    </bean>

    <bean id="linkdMetaTopologyProvider" class="org.opennms.features.topology.api.topo.SimpleMetaTopologyProvider">
        <argument ref="linkdTopologyHopProvider" />
    </bean>
    <service interface="org.opennms.features.topology.api.topo.MetaTopologyProvider" ref="linkdMetaTopologyProvider">
        <service-properties>
            <entry key="label" value="Enhanced Linkd" />
        </service-properties>
    </service>

    <!-- SearchProvider -->
    <bean id="linkdSearchProvider" class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdSearchProvider">
        <argument index="0" ref="linkdTopologyProvider" />
    </bean>
    <service interface="org.opennms.features.topology.api.topo.SearchProvider" ref="linkdSearchProvider" />

    <!-- EdgeStatusProvider -->
    <bean id="linkdEdgeStatusProvider" class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdEdgeStatusProvider">
        <property name="alarmDao" ref="alarmDao"/>
        <property name="onmsTopologyDao" ref="onmsTopologyDao"/>
    </bean>
	<bean id="linkdWrappedEdgeStatusProvider" class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdWrappedEdgeStatusProviders" init-method="init">
        <property name="edgeStatusProvider" ref="linkdEdgeStatusProvider"/>
    </bean>
    <service interface="org.opennms.features.topology.api.topo.EdgeStatusProvider" ref="linkdWrappedEdgeStatusProvider" />

    <!-- Status provider -->
    <bean id="linkdStatusProvider" class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdStatusProvider">
        <property name="alarmDao" ref="alarmDao"/>
        <property name="onmsTopologyDao" ref="onmsTopologyDao"/>
    </bean>
    <service interface="org.opennms.features.topology.api.topo.StatusProvider" ref="linkdStatusProvider" />

	<!-- Topologies Bundle Activator -->
    <bean id="linkdBundleActivator" 
    class="org.opennms.features.topology.plugins.topo.linkd.internal.LinkdTopologyBundleActivator"
    	init-method="start"
        destroy-method="stop">
        <property name="onmsTopologyDao" ref="onmsTopologyDao"/>
		<property name="metricRegistry" ref="metricRegistry"/>
		<property name="context" ref="blueprintBundleContext"/>
    </bean>

    <!-- Icon definition -->
    <service>
        <interfaces>
            <value>org.opennms.features.topology.api.ConfigurableIconRepository</value>
            <value>org.osgi.service.cm.ManagedService</value>
        </interfaces>
        <service-properties>
            <entry key="service.pid" value="org.opennms.features.topology.app.icons.linkd"/>
        </service-properties>
        <bean class="org.opennms.features.topology.api.support.DefaultIconRepository" />
    </service>
</blueprint>
