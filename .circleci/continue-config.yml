version: 2.1

orbs:
  path-filtering: circleci/path-filtering@0.0.2
  git-shallow-clone: guitarrapc/git-shallow-clone@2.0.3

executors:
  web-executor:
    docker:
      - image: cimg/node:16.3.0
  centos-build-executor:
    docker:
      - image: opennms/build-env:11.0.9.11-3.6.3-b5958

parameters:
  build-web:
    type: boolean
    default: false

workflows:
  version: 2

  build-web:
    when: << pipeline.parameters.build-web >>
    jobs:
      - build-web
      - build-container:
          requires:
            - build-web
      - deploy-container:
          requires:
            - build-container

commands:
  restore-nodejs-cache:
    description: "NodeJS: Calculate cache key and restore cache"
    steps:
      - run:
          name: Calculate cache key
          command: find web -name package\*.json | grep -v /target/ | sort -u | xargs cat > nodejs-dependency-json-cache.key
      - restore_cache:
          keys:
            - web-nodejs-dependencies-v100-{{ checksum "nodejs-dependency-json-cache.key" }}
  save-nodejs-cache:
    description: "NodeJS: Save cache"
    steps:
      - save_cache:
          key: web-nodejs-dependencies-v100-{{ checksum "nodejs-dependency-json-cache.key" }}
          paths:
            - web/node_modules
            - web/navbar/node_modules
            - web/nodes/node_modules
            - web/root-config/node_modules
  dockerhub-login:
    description: "Connect to DockerHub"
    steps:
      - run:
          name: Login to DockerHub
          command: |
            if [ -n "${DOCKERHUB_LOGIN}" ]; then
              docker login -u ${DOCKERHUB_LOGIN} -p ${DOCKERHUB_PASS}
            else
              echo "WARNING: dockerhub login not found. Assuming this is a PR or other external branch build."
            fi

jobs:
  build-web:
    executor: web-executor
    steps:
      - git-shallow-clone/checkout:
          fetch_depth: 1
      - restore-nodejs-cache
      - save-nodejs-cache
      - run:
          name: Install dependencies
          command: |
            cd web
            yarn
      - run:
          name: Build applications
          command: |
            cd web
            yarn build
      - persist_to_workspace:
          root: ~/project
          paths: web
  build-container:
    executor: centos-build-executor
    steps:
      - git-shallow-clone/checkout:
          fetch_depth: 1
      - attach_workspace:
          at: ~/project
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker
          command: |
            cd opennms-container/web
            ./build_container_image.sh
      - persist_to_workspace:
          root: ~/project
          paths: opennms-container/web/images
  deploy-container:
    executor: centos-build-executor
    steps:
      - git-shallow-clone/checkout:
          fetch_depth: 1
      - attach_workspace:
          at: ~/project
      - setup_remote_docker
      - dockerhub-login
      - run:
          name: Load OCI
          command: |
            docker image load -i opennms-container/web/images/horizon.oci
      - run:
          name: Tag and publish Docker image to registry
          command: |
            cd opennms-container/horizon
            ./tag.sh
            ./publish.sh
